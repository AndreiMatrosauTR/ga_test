name: Java and JS test

on:
  workflow_dispatch:
    inputs:
      test:
        description: Rerun test
        default: false
        type: boolean
        required: false
  push:
    branches: [ integration ]
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
    branches: [ integration ]
jobs:
  Java_and_JS_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        java-version: [17]
      max-parallel: 4
      fail-fast: false
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: adopt
        # cache: gradle

    # - name: Setup gradle
    #   uses: gradle/gradle-build-action@v2
    #   with:
    #     gradle-version: 7.1

    - name: Make gradlew and gradle executable
      run: |
        chmod +x ./gradlew
        chmod +x ./gradle

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build
        gradle-version: 7.3

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      env:
        FORCE_COLOR: 0
      with:
        node-version: ${{ matrix.node-version }}

    # - name: Setup yarn cache
    #   uses: actions/cache@v2
    #   id: yarn-cache
    #   with:
    #     path: node_modules
    #     key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
    #
    # - name: Install dependencies
    #   if: steps.yarn-cache.outputs.cache-hit != 'true'
    #   run: |
    #     yarn install --frozen-lockfile

    - name: Install yarn
      run: |
        yarn
        yarn --version



    # - name: Use filter to run test
    #   uses: dorny/paths-filter@v2.2.1
    #   id: filter
    #   with:
    #     filters: |
    #       jar:
    #         - '**/*.jar'
    #       js:
    #         - '**/*.js'
    - name: Run Gradle Tests
      # if: steps.filter.outputs.jar == 'true'
      uses: gradle/gradle-build-action@v2
      with:
        arguments: test
    - name: Run yarn test
      # if: steps.filter.output.js == 'true'
      run: yarn test --maxWorkers=2
    - name: Publishing Test Report
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: Test-report
        path: build/reports/tests/test/*
